name: Terraform Actions on PR
on:
  workflow_call:
    inputs:
      tf_workspace:
        required: true
        type: string

jobs:
  validate_and_plan:
    runs-on: self-hosted
    env:
      TF_WORKSPACE: ${{ inputs.tf_workspace }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          TF_WORKSPACE: ${{ inputs.tf_workspace }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: false

      - name: Save Terraform Plan to Disk for Upload
        run: terraform plan -out="${{ github.event.pull_request.number }}_${{ env.TF_WORKSPACE }}_plan" -input=false

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.pull_request.number }}_${{ env.TF_WORKSPACE }}_plan
          path: ${{ github.event.pull_request.number }}_${{ env.TF_WORKSPACE }}_plan
          if-no-files-found: error
          retention-days: 1

      - uses: actions/github-script@0.9.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
